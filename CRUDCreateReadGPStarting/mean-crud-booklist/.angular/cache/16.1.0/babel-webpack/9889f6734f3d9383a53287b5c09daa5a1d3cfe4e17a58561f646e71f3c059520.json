{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BooksListComponent = class BooksListComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.Census = [];\n  }\n  ngOnInit() {\n    this.crudService.GetCensus().subscribe(res => {\n      console.log(res);\n      this.Census = res;\n    });\n  }\n  onDelete(id) {\n    this.crudService.DeleteCensus(id).subscribe(res => {\n      console.log(res);\n    });\n    location.reload();\n  }\n  onUpdate(id) {\n    this.crudService.UpdateCensus(id).subscribe(res => {\n      console.log(res);\n    });\n    location.reload();\n  }\n};\nBooksListComponent = __decorate([Component({\n  selector: 'app-books-list',\n  templateUrl: './books-list.component.html',\n  styleUrls: ['./books-list.component.css']\n})], BooksListComponent);","map":{"version":3,"names":["Component","BooksListComponent","constructor","crudService","Census","ngOnInit","GetCensus","subscribe","res","console","log","onDelete","id","DeleteCensus","location","reload","onUpdate","UpdateCensus","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ecpi\\Desktop\\CIS360\\CIS360Final2\\CRUDCreateReadGPStarting\\mean-crud-booklist\\src\\app\\components\\books-list\\books-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CrudService } from './../../service/crud.service';\r\n\r\n@Component({\r\n  selector: 'app-books-list',\r\n  templateUrl: './books-list.component.html',\r\n  styleUrls: ['./books-list.component.css']\r\n})\r\nexport class BooksListComponent implements OnInit {\r\n\r\n  Census:any = [];\r\n \r\n  constructor(private crudService: CrudService) { }\r\n \r\n  ngOnInit(): void {\r\n    this.crudService.GetCensus().subscribe(res => {\r\n      console.log(res)\r\n      this.Census =res;\r\n    });    \r\n  }\r\n\r\n  onDelete(id: any): any{\r\n    this.crudService.DeleteCensus(id).subscribe(res => {\r\n      console.log(res)\r\n    })\r\n    location.reload();\r\n  }\r\n\r\n  onUpdate(id: any): any{\r\n    this.crudService.UpdateCensus(id).subscribe(res => {\r\n      console.log(res)\r\n    })\r\n    location.reload();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAI7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,MAAM,GAAO,EAAE;EAEiC;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,SAAS,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MAC3CC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACJ,MAAM,GAAEI,GAAG;IAClB,CAAC,CAAC;EACJ;EAEAG,QAAQA,CAACC,EAAO;IACd,IAAI,CAACT,WAAW,CAACU,YAAY,CAACD,EAAE,CAAC,CAACL,SAAS,CAACC,GAAG,IAAG;MAChDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;IACFM,QAAQ,CAACC,MAAM,EAAE;EACnB;EAEAC,QAAQA,CAACJ,EAAO;IACd,IAAI,CAACT,WAAW,CAACc,YAAY,CAACL,EAAE,CAAC,CAACL,SAAS,CAACC,GAAG,IAAG;MAChDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;IACFM,QAAQ,CAACC,MAAM,EAAE;EACnB;CACD;AA1BYd,kBAAkB,GAAAiB,UAAA,EAL9BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWpB,kBAAkB,CA0B9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}